from typing import Dict, Type
from .base import BaseExtractor

_REGISTRY: Dict[str, Type[BaseExtractor]] = {}

def register(name: str):
    def deco(cls: Type[BaseExtractor]):
        _REGISTRY[name] = cls
        cls.name = name
        return cls
    return deco

def get_extractor(name: str) -> Type[BaseExtractor]:
    if name not in _REGISTRY:
        raise KeyError(f"Extractor '{name}' not registered.")
    return _REGISTRY[name]
